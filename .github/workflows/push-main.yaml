name: Publish Main Version

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KUBE_CONFIG_PATH: '$HOME/.kube'
      KUBE_CONFIG_FILENAME: 'config'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      -
        name: Set up npm for linting
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      -
        name: Lint Markdown
        run: npm ci && npm run mdlint
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and Push Latest version
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: 'Install Helm'
        uses: azure/setup-helm@v4
        with:
          version: 'latest'
      -
        name: Install Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'
      -
        name: Create KUBECONFIG
        env:
          KUBE_CONFIG: '${{ secrets.KUBECONFIG_PROD_AV2 }}'
        run: bash ./scripts/create_kubeconfig.sh
      -
        name: Deploy Helm Release
        env:
          TRAINING_HELM_RELEASE: 'latest'
          TRAINING_NAMESPACE: 'pitc-cicd-dagger-techlab-prod'
          TRAINING_VERSION: '${{ github.sha }}'
        run: |
          helm upgrade $TRAINING_HELM_RELEASE acend-training-chart --install --wait \
            --kubeconfig "$KUBE_CONFIG_PATH/$KUBE_CONFIG_FILENAME" \
            --namespace=$TRAINING_NAMESPACE \
            --set=app.name=$HELM_RELEASE \
            --set=app.version=$TRAINING_VERSION \
            --repo=https://acend.github.io/helm-charts/ \
            --values=helm-chart/values.yaml \
            --set-string=acendTraining.deployments[0].ingress.labels.public=true \
            --atomic
      -
        name: Redeploy Deployments
        env:
          TRAINING_HELM_RELEASE: 'latest'
          TRAINING_HELM_NAME: 'dagger-techlab-puzzle'
          TRAINING_NAMESPACE: 'pitc-cicd-dagger-techlab-prod'
        run: |
          kubectl rollout restart deployment/${TRAINING_HELM_RELEASE}-${TRAINING_HELM_NAME} \
            --kubeconfig "$KUBE_CONFIG_PATH/$KUBE_CONFIG_FILENAME" \
            --namespace $TRAINING_NAMESPACE
